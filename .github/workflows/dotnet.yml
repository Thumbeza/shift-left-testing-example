# This workflow will build and run unit tests

name: build_test_and_deploy

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  build:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v3
    - name: Setup .NET
      uses: actions/setup-dotnet@v3
      with:
        dotnet-version: 6.0.x
        
    - name: Restore dependencies
      run: dotnet restore
      
    - name: Build
      run: dotnet build --no-restore
      
    - name: Run Unit Tests
      run: dotnet test Shift.Left.Testing.Poc.Tests/Shift.Left.Testing.Poc.Tests.csproj --collect:"XPlat Code Coverage" --no-build --verbosity normal

    - name: Code Coverage Report
      uses: irongut/CodeCoverageSummary@v1.3.0
      with:
        filename: /**/coverage.cobertura.xml
        badge: true
        fail_below_min: true
        format: markdown
        hide_branch_rate: false
        hide_complexity: true
        indicators: true
        output: both
        thresholds: '60 80'

    - name: Add Coverage PR Comment
      uses: marocchino/sticky-pull-request-comment@v2
      if: github.event_name == 'pull_request'
      with:
        recreate: true
        path: code-coverage-results.md
      
    - name: Publish Artifacts
      run: dotnet publish Shift.Left.Testing.Poc/Shift.Left.Testing.Poc.csproj -c Release -o website
      
    - name: Upload Build Artifacts
      uses: actions/upload-artifact@v3.1.3
      with:
        name: website
        path: /home/runner/work/shift-left-testing-example/shift-left-testing-example/website/**
        if-no-files-found: error

  deploy_to_test:
    needs: build
    runs-on: ubuntu-latest

    steps:
    - name: Download a Build Artifact
      uses: actions/download-artifact@v2.1.1
      with:
        name: website
        path: /home/runner/work/shift-left-testing-example/shift-left-testing-example/website/**

  pdt_for_test:
    needs: deploy_to_test
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v3
    - name: Setup .NET
      uses: actions/setup-dotnet@v3
      with:
        dotnet-version: 6.0.x

  security_checks:
    needs: pdt_for_test
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v3
    - name: Setup .NET
      uses: actions/setup-dotnet@v3
      with:
        dotnet-version: 6.0.x

  promote_to_staging_and_production:
    needs: [build, deploy_to_test, pdt_for_test]
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3
      - name: Setup .NET
        uses: actions/setup-dotnet@v3
        with:
          dotnet-version: 6.0.x

  deploy_to_staging:
    needs: promote_to_staging_and_production
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v3
    - name: Setup .NET
      uses: actions/setup-dotnet@v3
      with:
        dotnet-version: 6.0.x

  pdt_for_staging:
    needs: deploy_to_staging
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v3
    - name: Setup .NET
      uses: actions/setup-dotnet@v3
      with:
        dotnet-version: 6.0.x

  deploy_to_production:
    needs: pdt_for_staging
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v3
    - name: Setup .NET
      uses: actions/setup-dotnet@v3
      with:
        dotnet-version: 6.0.x

  pdt_for_production:
    needs: deploy_to_production
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v3
    - name: Setup .NET
      uses: actions/setup-dotnet@v3
      with:
        dotnet-version: 6.0.x

  finish_release:
    needs: pdt_for_production
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v3
    - name: Setup .NET
      uses: actions/setup-dotnet@v3
      with:
        dotnet-version: 6.0.x
