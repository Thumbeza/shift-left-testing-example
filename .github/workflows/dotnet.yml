# This workflow will build, test and deploy math api project

name: build_test_and_deploy

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  build:

    runs-on: ubuntu-latest

    steps:
    # Chechout the repository
    - uses: actions/checkout@v3
    - name: Setup .NET
      uses: actions/setup-dotnet@v3
      with:
        dotnet-version: 6.0.x
    # Restore dependencies 
    - name: Restore dependencies
      run: dotnet restore
    
    # Build all projects without the restore
    - name: Build
      run: dotnet build --no-restore
    
    # Run unit tests collect test coverage
    - name: Run Unit Tests
      run: dotnet test Shift.Left.Testing.Poc.Tests/Shift.Left.Testing.Poc.Tests.csproj --collect:"XPlat Code Coverage" --no-build --verbosity normal
    
    # Get the unit test code coverage using Coverlet Collector
    - name: Code Coverage Report
      uses: irongut/CodeCoverageSummary@v1.3.0
      with:
        filename: /**/coverage.cobertura.xml
        badge: true
        fail_below_min: true
        format: markdown
        hide_branch_rate: false
        hide_complexity: true
        indicators: true
        output: both
        thresholds: '60 80'
    
    # Add a comment to the pr if code coverage us below the accepted threshold 
    - name: Add Coverage PR Comment
      uses: marocchino/sticky-pull-request-comment@v2
      if: github.event_name == 'pull_request'
      with:
        recreate: true
        path: code-coverage-results.md
    
    # Publish and upload API artifacts
    - name: Publish API Artifacts
      run: dotnet publish Shift.Left.Testing.Poc/Shift.Left.Testing.Poc.csproj -c Release -o math-api
      
    - name: Upload API Artifacts
      uses: actions/upload-artifact@v3.1.3
      with:
        name: api
        path: /home/runner/work/shift-left-testing-example/shift-left-testing-example/math-api
        if-no-files-found: error

    # Publish and upload e2e test artifacts
    - name: Publish Test Artifacts
      run: dotnet publish Shift.Left.testing.Poc.Api.e2e.Tests/Shift.Left.Testing.Poc.Api.e2e.Tests.csproj -c Release -o tests
        
    - name: Upload Test Artifacts
      uses: actions/upload-artifact@v3.1.3
      with:
        name: tests
        path: /home/runner/work/shift-left-testing-example/shift-left-testing-example/tests
        if-no-files-found: error

  deploy_to_test:
    needs: build
    runs-on: ubuntu-latest

    steps:
    # Download API artefacts
    - name: Download API Artifacts
      uses: actions/download-artifact@v2.1.1
      with:
        name: api
        path: /home/runner/work/shift-left-testing-example/shift-left-testing-example/math-api

    # Deploy to Azure Web apps
    - name: Publishing math-api to Azure app service
      uses: azure/webapps-deploy@v2
      with: 
        app-name: ${{ env.AZURE_WEBAPP_NAME }}
        publish-profile: ${{ secrets.AZURE_WEBAPP_PUBLISH_PROFILE  }}
        package: /home/runner/work/shift-left-testing-example/shift-left-testing-example/math-api

  pdt_for_test:
    needs: deploy_to_test
    runs-on: ubuntu-latest

    steps:
    # Download the api e2e test artifacts 
    - name: Download Test Artifacts
      uses: actions/download-artifact@v2.1.1
      with:
        name: api
        path: /home/runner/work/shift-left-testing-example/shift-left-testing-example/tests
    
    # download the dotnet sdk that matches the test project
    - uses: actions/checkout@v3
    - name: Setup .NET
      uses: actions/setup-dotnet@v3
      with:
        dotnet-version: 6.0.x
    
    # Run api e2e tests
    - name: Run PDT (API E2E Tests)
      run: dotnet test /home/runner/work/shift-left-testing-example/shift-left-testing-example/tests/**/*Api.e2e.Tests.csproj --no-build --verbosity normal

  security_checks:
    needs: deploy_to_test
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v3
    - name: Setup .NET
      uses: actions/setup-dotnet@v3
      with:
        dotnet-version: 6.0.x

  performance_tests:
    needs: deploy_to_test
    runs-on: ubuntu-latest
      
    steps:
      - uses: actions/checkout@v3
      - name: Setup .NET
        uses: actions/setup-dotnet@v3
        with:
          dotnet-version: 6.0.x

  